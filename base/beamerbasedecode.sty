\ProvidesPackage{beamerbasedecode}[2004/01/10 ver 1.30]
\NeedsTeXFormat{LaTeX2e}[1995/12/01]


% Copyright 2003 by Till Tantau <tantau@users.sourceforge.net>.
%
% This program can be redistributed and/or modified under the terms
% of the GNU Public License, version 2.



\common

%
% News
%
\newcount\beamer@slideinframe
\newcount\beamer@minimum
\newif\ifbeamer@anotherslide
\newif\ifbeamer@localanotherslide


% Sets dowhat to doif, if \beamer@slideinframe is in the specified
% interval. Example: 5-7,-3,9,11,13- would mean pages
% 1,2,3,5,6,7,9,11,13,14,15,16,... 
%
% As a side effect, \@another is called whenever the there is a number
% in the list that is larger than the current serialnumber

\def\beamer@decode{%
  \global\beamer@minimum=10000\relax%
  \gdef\beamer@decaction{}%
  \gdef\beamer@decactionrev{}%
  \gdef\beamer@decodefound{+}%
  \beamer@@decodefind}
\def\beamer@@decodefind#1| {%
  \beamer@@@decodefind#1:|}
\def\beamer@@@decodefind#1:#2|{%
  \beamer@ifempty{#2}%
  {\beamer@decodefind beamer:#1:}%
  {\beamer@decodefind #1:#2}}

%
%{\futurelet\beamer@next\beamer@decodeinsertdefault}
%\def\beamer@decodeinsertdefault{\ifcat\beamer@next a%
%  \gdef\beamer@next{}%
%  \else%
%  \gdef\beamer@next{beamer:}%
%  \fi%
%  \expandafter\beamer@decodefind\beamer@next}

\def\beamer@default{default}
\def\beamer@articlemode{article}
\def\beamer@presentationmode{presentation}
\def\beamer@modestop{stop}
\def\beamer@modeall{all}
\def\beamer@decodefind#1:#2:{%
  \def\beamer@mode{#1}%
  \beameratdecodeaction{#2}%
  \ifx\beamer@mode\beamer@modestop%
    \expandafter\beamer@@decode\beamer@decodefound,!%
    \let\beamer@next=\relax%
  \else
    \ifx\beamer@mode\beamer@currentmode%
      \beamer@@decodefound%
    \else%
      \ifx\beamer@mode\beamer@modeall%
        \beamer@@decodefound%
      \else%
        \ifx\beamer@mode\beamer@presentationmode%
          \ifx\beamer@currentmode\beamer@articlemode\else%
            \beamer@@decodefound%
          \fi%
        \fi%
      \fi%
    \fi%
    \let\beamer@next=\beamer@@decodefind%
  \fi%
 \beamer@next}

\def\beamer@@decodefound{%
  \ifx\beamer@action\beamer@default%
    \expandafter\gdef\expandafter\beamer@decodefound\expandafter{\beamer@spec}%
  \else
    \xdef\beamer@decaction{\beamer@decaction{\beamer@action<\beamer@spec>}}
    \xdef\beamer@decactionrev{{\beamer@action}\beamer@decactionrev}
  \fi}
\def\beamer@currentaction{default}

{
\makeatother
\gdef\beameratdecodeaction#1{%
  \beameratdecodeactionb#1@:}
\gdef\beameratdecodeactionb#1@#2:{%
  \beameratdecodeactionc{#1}{#2}}
\gdef\beameratgetridofat#1@{%
  \gdef\beameratspec{#1}%
}
}

\def\beameratdecodeactionc#1#2{%
  \gdef\beamer@spec{#2}%
  \ifx\beamer@spec\@empty%
    \gdef\beamer@spec{#1}%
    \gdef\beamer@action{default}%
  \else%
    \gdef\beamer@action{#1}%
    \beameratgetridofat#2%
    \expandafter\gdef\expandafter\beamer@spec\expandafter{\beameratspec}
  \fi%
}




\def\beamer@doifnotinframe{}
\def\beamer@@decode{%
  \@ifnextchar!%
  {\beamer@decodeend}%
  {%
    \@ifnextchar+%
    {\beamer@decodeall}{%
      \@ifnextchar-%
      {\beamer@decodeuntil}%
      {\beamer@decodenumber}}}}
\def\beamer@decodeend!{}
\def\beamer@decodeall+,{%
  \ifnum1<\beamer@minimum\global\beamer@minimum=1\fi%
  \ifnum1>\beamer@slideinframe%
  \global\beamer@anotherslidetrue%
  \beamer@localanotherslidetrue%
  \fi%
  \gdef\beamer@doifnotinframe{\beamer@doifinframe}\beamer@@decode}
\def\beamer@decodeuntil-#1,{%
  \ifnum1<\beamer@minimum\global\beamer@minimum=1\fi%
  \ifnum#1>\beamer@slideinframe\global\beamer@anotherslidetrue\beamer@localanotherslidetrue\fi%
  \ifnum\beamer@slideinframe>#1\else\gdef\beamer@doifnotinframe{\beamer@doifinframe}\fi%
  \beamer@@decode}
\def\beamer@decodenumber#1{%
  \@ifnextchar,%
  {\beamer@decodeone{#1}}%
  {\@ifnextchar-%
    {\beamer@decodenumberto{#1}}%
    {\beamer@decodegobble{#1}}}}
\def\beamer@decodegobble#1#2{%
  \beamer@decodenumber{#1#2}}
\def\beamer@decodenumberto#1-{
  \@ifnextchar,%
  {\beamer@decodeto{#1}}%
  {\beamer@decodebetween{#1}}}
\def\beamer@decodeto#1,{%
  \ifnum#1<\beamer@minimum\global\beamer@minimum=#1\fi%
  \ifnum#1>\beamer@slideinframe\global\beamer@anotherslidetrue\beamer@localanotherslidetrue\fi%
  \ifnum#1>\beamer@slideinframe\else\gdef\beamer@doifnotinframe{\beamer@doifinframe}\fi%
  \beamer@@decode}
\def\beamer@decodebetween#1#2,{%
  \ifnum#1<\beamer@minimum\global\beamer@minimum=#1\fi%
  \ifnum#1>\beamer@slideinframe\global\beamer@anotherslidetrue\beamer@localanotherslidetrue\fi%
  \ifnum#2>\beamer@slideinframe\global\beamer@anotherslidetrue\beamer@localanotherslidetrue\fi%
  \ifnum#1>\beamer@slideinframe\else\ifnum#2<\beamer@slideinframe\else\gdef\beamer@doifnotinframe{\beamer@doifinframe}\fi\fi%
  \beamer@@decode}
\def\beamer@decodeone#1,{%
  \ifnum#1<\beamer@minimum\global\beamer@minimum=#1\fi%
  \ifnum#1>\beamer@slideinframe\global\beamer@anotherslidetrue\beamer@localanotherslidetrue\fi%
  \ifnum#1=\beamer@slideinframe\gdef\beamer@doifnotinframe{\beamer@doifinframe}\fi%
  \beamer@@decode}

\def\beamer@donow{\beamer@doifnotinframe}

\def\beamer@saveanother{\let\beamer@savedif=\ifbeamer@anotherslide}
\def\beamer@restoreanother{\global\let\ifbeamer@anotherslide=\beamer@savedif}





%
%
% Basic overlay commands
%
%

%
% \only
%
\def\only{\@ifnextchar<{\beamer@only}{\beamer@@only}}
\long\def\beamer@only<#1>#2{%
  \def\beamer@doifnotinframe{}\def\beamer@doifinframe{#2}%
  {\setbox0=\hbox{\beamer@decode#1| stop:0| }}\beamer@donow}
\long\def\beamer@@only#1{\@ifnextchar<{\beamer@@@only{#1}}{#1}}
\long\def\beamer@@@only#1<#2>{%
  \def\beamer@doifnotinframe{}\def\beamer@doifinframe{#1}%
  {\setbox0=\hbox{\beamer@decode#2| stop:0| }}\beamer@donow}

%
% \alt and \altenv
%
\def\alt{\@ifnextchar<{\beamer@alt}{\beamer@alttwo}}
\long\def\beamer@alttwo#1#2{\@ifnextchar<{\beamer@altget{#1}{#2}}{#1}}
\long\def\beamer@altget#1#2<#3>{%
  \def\beamer@doifnotinframe{#2}\def\beamer@doifinframe{#1}%
  {\setbox0=\hbox{\beamer@decode#3| stop:0| }}\beamer@donow}
\long\def\beamer@alt<#1>#2#3{%
  \def\beamer@doifnotinframe{#3}\def\beamer@doifinframe{#2}%
  {\setbox0=\hbox{\beamer@decode#1| stop:0| }}\beamer@donow}


\def\altenv{\@ifnextchar<{\beamer@altenv}{\beamer@@@altenv}}
\def\beamer@altenv<#1>{\beamer@@altenv{<#1>}}
\long\def\beamer@@@altenv#1#2#3#4{\@ifnextchar<{\beamer@altenvsort{#1}{#2}{#3}{#4}}{\beamer@@altenv{}{#1}{#2}{#3}{#4}}}
\long\def\beamer@altenvsort#1#2#3#4<#5>{\beamer@@altenv{<#5>}{#1}{#2}{#3}{#4}}
\long\def\beamer@@altenv#1#2#3#4#5{\alt#1{\long\def\beamer@eoenv{#3}#2}{\long\def\beamer@eoenv{#5}#4}}
\def\endaltenv{\beamer@eoenv}

%
% \action and actionenv
%
\def\beamer@plus{+}

\def\action{\@ifnextchar<{\beamer@parsedaction}{\beamer@parsedaction<+>}}
\long\def\beamer@parsedaction<#1>#2{%
  \def\beamer@doifnotinframe{}\def\beamer@doifinframe{}%
  {{\setbox0=\hbox{\beamer@decode#1| stop:0| }}}%
  \ifx\beamer@decodefound\beamer@plus%
    \long\def\beamer@todo{#2}%
  \else%
    \expandafter\long\expandafter\def\expandafter\beamer@todo%
    \expandafter{\expandafter\uncover\expandafter<\beamer@decodefound>{#2}}%
  \fi%
  \expandafter\beamer@processactions\beamer@decaction{}%
  \beamer@todo}

\def\beamer@processactions#1{%
  \beamer@ifempty{#1}{}{%
    \expandafter\beamer@@processactions\expandafter{\beamer@todo}#1}}
\long\def\beamer@@processactions#1#2<#3>{%
  \expandafter\long\expandafter\def\expandafter\beamer@todo\expandafter{%
    \csname#2\endcsname<#3>{#1}}%
  \beamer@processactions}

\def\actionenv{\@ifnextchar<{\beamer@parsedactionenv}{\beamer@parsedactionenv<+>}}
\def\beamer@parsedactionenv<#1>{%
  \def\beamer@doifnotinframe{}\def\beamer@doifinframe{}%
  {{\setbox0=\hbox{\beamer@decode#1| stop:0| }}}%
  \ifx\beamer@decodefound\beamer@plus%
    \def\beamer@todobegin{}%
    \def\beamer@todoend{}%
  \else%
    \edef\beamer@todobegin{\noexpand\begin{uncoverenv}<\beamer@decodefound>}%
    \def\beamer@todoend{\end{uncoverenv}}
  \fi%
  \expandafter\beamer@processactionsbegin\beamer@decaction{}%
  \expandafter\beamer@processactionsend\beamer@decaction{}%
  \beamer@todobegin}
\def\endactionenv{\beamer@todoend}

\def\beamer@processactionsbegin#1{%
  \beamer@ifempty{#1}{}{%
    \expandafter\beamer@@processactionsbegin\expandafter{\beamer@todobegin}#1}}
\long\def\beamer@@processactionsbegin#1#2<#3>{%
  \def\beamer@todobegin{\begin{#2env}<#3>#1}%
  \beamer@processactionsbegin}


\def\beamer@processactionsend#1{%
  \beamer@ifempty{#1}{}{%
    \expandafter\beamer@@processactionsend\expandafter{\beamer@todoend}#1}}
\long\def\beamer@@processactionsend#1#2<#3>{%
  \def\beamer@todoend{#1\end{#2env}}%
  \beamer@processactionsend}


%
% \temporal
%
\def\@temporal<#1>#2#3#4{% past, present, future
  \def\beamer@doifnotinframe{\beamer@picked}\def\beamer@doifinframe{#3}%
  {\setbox0=\hbox{\beamer@localanotherslidefalse\beamer@decode#1| stop:0|
      \ifbeamer@localanotherslide\gdef\beamer@picked{#2}\else\gdef\beamer@picked{#4}\fi}}\beamer@donow}


%
% \newoverlaycommand
%
\def\beameroriginal#1{\csname @orig\string#1\endcsname}


%% \long\def\newoverlaycommand#1#2#3{% In slides, #1 does #2, otherwise #3
%%   \def#1{\@ifnextchar<{\@overlayparse{#2}{#3}}{#2}}}

%% \long\def\renewoverlaycommand#1#2#3{% In slides, #1 does #2, otherwise #3
%%   \edef\beamer@name{\beameroriginal#1}
%%   \expandafter\let\beamer@name=#1\relax%
%%   \def#1{\@ifnextchar<{\@overlayparse{#2}{#3}}{#2}}}

%% \long\def\@overlayparse#1#2<#3>{\alt<#3>{#1}{#2}}

%% \def\newoverlayenvironment#1{%
%%   \@ifnextchar[{\@@newoverlayenvironment{#1}}{\@newoverlayenvironment{#1}}}

%% \long\def\@newoverlayenvironment#1#2#3#4#5{% In slides, #1 forms an
%% % environment with begin #2 and end #3, otherwise an environment with 
%% % begin #4 and end #5
%%   \newenvironment{#1}{}{}%
%%   \expandafter\def\csname #1\endcsname{%
%%     \@ifnextchar<{\beamer@parsebegin{#1}{#2}{#3}{#4}{#5}}{%
%%       \expandafter\def\csname end#1\endcsname{#3}#2}}%
%%   }
    
%% \long\def\beamer@parsebegin#1#2#3#4#5<#6>{%
%%   \alt<#6>{% In slide case
%%     \expandafter\def\csname end#1\endcsname{#3}%
%%     #2}{%
%%     \expandafter\def\csname end#1\endcsname{#5}%
%%     #4}}

%% \long\def\renewoverlayenvironment#1#2#3#4#5{%
%%   \edef\beamer@do{\csname original#1\endcsname=\expandafter\noexpand\csname#1\endcsname}
%%   \expandafter\let\beamer@do
%%   \edef\beamer@do{\csname endoriginal#1\endcsname=\expandafter\noexpand\csname end#1\endcsname}
%%   \expandafter\let\beamer@do
%%   \renewenvironment{#1}{}{}%
%%   \expandafter\def\csname #1\endcsname{%
%%     \@ifnextchar<{\beamer@parsebegin{#1}{#2}{#3}{#4}{#5}}{%
%%       \expandafter\def\csname end#1\endcsname{#3}#2}%
%%     }%
%%   }

%% \long\def\@@newoverlayenvironment#1[1]#2#3#4#5{% Currently, this works
%% % only for a single argument
%%   \newenvironment{#1}{}{}%
%%   \expandafter\new@command\csname @in#1\endcsname[1]{#2}%
%%   \expandafter\new@command\csname @out#1\endcsname[1]{#4}%
%%   \expandafter\long\expandafter\def\csname #1\endcsname##1{%
%%     \@ifnextchar<{\beamer@parsebegin{#1}{\csname @in#1\endcsname{##1}}{#3}{\csname @out#1\endcsname{##1}}{#5}}{%
%%       \expandafter\def\csname end#1\endcsname{#3}#2}}%
%% }



\newcount\beamer@argscount

%
% newenvironment extension
%
\let\beamer@orignewenvironment=\newenvironment

\def\newenvironment{\@ifnextchar<{\beamer@newenv}{\beamer@orignewenvironment}}
\def\beamer@newenv<>{\@star@or@long\beamer@new@environment}
\def\beamer@new@environment#1{\@ifnextchar[{\beamer@@newenv{#1}}{\beamer@newenvnoopt{#1}{0}}}
\def\beamer@@newenv#1[#2]{\@ifnextchar[{\beamer@newenvopt{#1}{#2}}{\beamer@newenvnoopt{#1}{#2}}}
\long\def\beamer@newenvnoopt#1#2#3#4{%
  \expandafter\newcommand\expandafter<\expandafter>\csname#1\endcsname[#2]{#3}%
  \expandafter\long\expandafter\def\csname end#1\endcsname{#4}%
}
\long\def\beamer@newenvopt#1#2[#3]#4#5{%
  \expandafter\newcommand\expandafter<\expandafter>\csname#1\endcsname[#2][#3]{#4}%
  \expandafter\long\expandafter\def\csname end#1\endcsname{#5}%
}


\let\beamer@origrenewenvironment=\renewenvironment

\def\renewenvironment{\@ifnextchar<{\beamer@renewenv}{\beamer@origrenewenvironment}}
\def\beamer@renewenv<>#1{%
  \edef\beamer@do{\csname original#1\endcsname=\expandafter\noexpand\csname#1\endcsname}
  \expandafter\let\beamer@do%
  \edef\beamer@do{\csname endoriginal#1\endcsname=\expandafter\noexpand\csname end#1\endcsname}
  \expandafter\let\beamer@do%
  \newenvironment<>{#1}}


%
% newcommand extension
%
\let\beamer@orignewcommand=\newcommand

\def\newcommand{\@ifnextchar<{\beamer@newcom}{\beamer@orignewcommand}}
\def\beamer@newcom<>{\@star@or@long\beamer@new@command}
\def\beamer@new@command#1{\@ifnextchar[{\beamer@@newcom{#1}}{\beamer@newcomnoopt{#1}{0}}}
\def\beamer@@newcom#1[#2]{\@ifnextchar[{\beamer@newcomopt{#1}{#2}}{\beamer@newcomnoopt{#1}{#2}}}
\long\def\beamer@newcomnoopt#1#2#3{%
  \ifnum#2=0\relax%
    \expandafter\def\expandafter#1\expandafter{\expandafter\beamer@sortzero\expandafter{\csname beamerx@\string#1\endcsname}}%
  \else
    \expandafter\def\expandafter#1\expandafter{\expandafter\beamer@sort\expandafter{\csname beamerx@\string#1\endcsname}{#2}}%
  \fi%
  \beamer@argscount=#2\relax%
  \advance\beamer@argscount by 1\relax%
  \expandafter\newcommand\expandafter*\csname beamerx@\string#1\endcsname[\beamer@argscount]{#3}%
}
\long\def\beamer@newcomopt#1#2[#3]#4{%
  \expandafter\def\expandafter#1\expandafter{\expandafter\beamer@presort\expandafter{\csname beamerx@\string#1\endcsname}{#2}{#3}}%
  \beamer@argscount=#2\relax%
  \advance\beamer@argscount by 1\relax%
  \expandafter\newcommand\expandafter*\csname beamerx@\string#1\endcsname[\beamer@argscount]{#4}%
}

\let\beamer@origrenewcommand=\renewcommand

\def\renewcommand{\@ifnextchar<{\beamer@renewcom}{\beamer@origrenewcommand}}
\def\beamer@renewcom<>#1{%
  \expandafter\def\expandafter\beamer@name\expandafter{\csname @orig\string#1\endcsname}%
  \expandafter\let\beamer@name=#1\relax%
  \newcommand<>#1}


\long\def\beamer@presort#1#2#3{%
  \long\def\beamer@todo{#1}%
  \def\beamer@ospec{}%
  \beamer@argscount=#2\relax%
  \beamer@prechecka{#3}}
\long\def\beamer@prechecka#1{\@ifnextchar<{\beamer@preget{#1}}{\beamer@precheckb{#1}}}
\long\def\beamer@preget#1<#2>{\def\beamer@ospec{<#2>}\beamer@precheckb{#1}}
\long\def\beamer@precheckb#1{\@ifnextchar[{\beamer@pregetb}{\beamer@pregetb[#1]}}
\long\def\beamer@pregetb[#1]{%
  \expandafter\long\expandafter\def\expandafter\beamer@todo\expandafter{\beamer@todo{#1}}%
  \advance\beamer@argscount by-1\relax%
  \beamer@parseargs%
} 

\def\beamer@sortzero#1{\@ifnextchar<{\beamer@sortzeroread{#1}}{#1{}}}
\def\beamer@sortzeroread#1<#2>{#1{<#2>}}


\def\beamer@sort#1#2{%
  \long\def\beamer@todo{#1}%
  \def\beamer@ospec{}%
  \beamer@argscount=#2\relax%
  \beamer@parseargs}

\def\beamer@parseargs{%
  \ifnum\beamer@argscount=0%
    \let\next=\beamer@finalargscheck%
  \else%
    \let\next=\beamer@lookforarg%
  \fi%
  \next}
\def\beamer@lookforarg{%
  \@ifnextchar<\beamer@foundspec\beamer@readarg}
\def\beamer@foundspec<#1>{%
  \def\beamer@ospec{<#1>}%
  \beamer@lookforarg}
\def\beamer@readarg#1{%
  \expandafter\long\expandafter\def\expandafter\beamer@todo\expandafter{\beamer@todo{#1}}%
  \advance\beamer@argscount by-1\relax%
  \beamer@parseargs%
}

\def\beamer@finalargscheck{\@ifnextchar<\beamer@finalspec\beamer@finalnospec}
\def\beamer@finalspec<#1>{\def\beamer@ospec{<#1>}\beamer@finalnospec}
\def\beamer@finalnospec{%
  \expandafter\beamer@todo\expandafter{\beamer@ospec}}



%%% Local Variables: 
%%% mode: latex
%%% TeX-master: "~/texmf/tex/latex/beamer/examples/beamerexample1.tex"
%%% End: 
